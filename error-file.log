2025-02-27 14:59:17,455 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-02-27 14:59:25,187 INFO Layer 1: C_prev=32, C_curr=16, Type=CNN, Reduction=False
2025-02-27 14:59:25,200 INFO Layer 2: C_prev=32, C_curr=16, Type=CNN, Reduction=False
2025-02-27 14:59:25,213 INFO Layer 3: C_prev=32, C_curr=32, Type=CNN, Reduction=True
2025-02-27 14:59:25,223 INFO Layer 4: C_prev=64, C_curr=32, Type=MLP, Reduction=False
2025-02-27 14:59:25,233 INFO Layer 5: C_prev=64, C_curr=32, Type=MLP, Reduction=False
2025-02-27 14:59:25,243 INFO Layer 6: C_prev=64, C_curr=32, Type=MLP, Reduction=True
2025-02-27 14:59:25,253 INFO Layer 7: C_prev=64, C_curr=16, Type=Fusion, Reduction=False
2025-02-27 14:59:25,263 INFO Layer 8: C_prev=64, C_curr=16, Type=Fusion, Reduction=False
2025-02-27 14:59:25,383 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-02-27 14:59:25,403 INFO Cell CNN: Preprocessed states shapes: [torch.Size([64, 16, 28, 28]), torch.Size([64, 16, 28, 28])]
2025-02-27 14:59:25,478 INFO Cell CNN: Output shape: torch.Size([64, 64, 28, 28])
2025-03-02 21:34:46,579 INFO Layer 1: C_prev=32, C_curr=16, Type=CNN, Reduction=False
2025-03-02 21:34:46,590 INFO Layer 2: C_prev=32, C_curr=16, Type=CNN, Reduction=False
2025-03-02 21:34:46,601 INFO Layer 3: C_prev=32, C_curr=32, Type=CNN, Reduction=True
2025-03-02 21:34:46,609 INFO Layer 4: C_prev=64, C_curr=32, Type=MLP, Reduction=False
2025-03-02 21:34:46,618 INFO Layer 5: C_prev=64, C_curr=32, Type=MLP, Reduction=False
2025-03-02 21:34:46,627 INFO Layer 6: C_prev=64, C_curr=32, Type=MLP, Reduction=True
2025-03-02 21:34:46,636 INFO Layer 7: C_prev=64, C_curr=16, Type=Fusion, Reduction=False
2025-03-02 21:34:46,645 INFO Layer 8: C_prev=64, C_curr=16, Type=Fusion, Reduction=False
2025-03-02 21:34:47,372 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 21:34:47,453 INFO Cell CNN: Preprocessed states shapes: [torch.Size([64, 16, 28, 28]), torch.Size([64, 16, 28, 28])]
2025-03-02 21:34:47,530 INFO Cell CNN: Output shape: torch.Size([64, 64, 28, 28])
2025-03-02 21:35:58,050 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 21:39:43,466 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 21:39:43,477 INFO Cell CNN: Preprocessed states shapes: [torch.Size([64, 16, 28, 28]), torch.Size([64, 16, 28, 28])]
2025-03-02 21:50:55,130 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 21:50:55,130 INFO Layer 0: weights shape torch.Size([14]), s0 shape torch.Size([64, 16, 28, 28]), s1 shape torch.Size([64, 16, 28, 28])
2025-03-02 21:50:55,140 INFO Cell CNN: Preprocessed states shapes: [torch.Size([64, 16, 28, 28]), torch.Size([64, 16, 28, 28])]
2025-03-02 21:55:26,817 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 21:55:26,818 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 21:55:26,836 INFO Cell CNN: Preprocessed states shapes: [torch.Size([64, 16, 28, 28]), torch.Size([64, 16, 28, 28])]
2025-03-02 21:57:36,410 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 21:57:36,411 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 21:57:36,412 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:00:16,589 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:00:16,589 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:00:16,590 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:02:58,777 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:02:58,778 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:02:58,778 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:03:22,280 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:03:22,288 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:03:22,289 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:05:25,285 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:05:25,286 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:05:25,286 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:07:46,876 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:07:46,877 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:07:46,877 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:11:13,803 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:11:13,803 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:11:13,804 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:11:39,671 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:11:39,673 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:11:39,674 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:13:10,800 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:13:10,801 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:13:10,801 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:14:20,729 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:14:20,730 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:14:20,730 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:16:03,547 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:16:03,547 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:16:03,548 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:17:12,191 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:17:12,191 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:17:12,192 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:18:01,443 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:18:01,444 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:18:01,444 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:19:26,988 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:19:26,988 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:19:26,989 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:19:41,603 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:19:41,604 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:19:41,604 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:21:04,496 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:21:04,497 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:21:04,498 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:21:23,275 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:21:23,276 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:21:23,276 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:22:18,775 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:22:18,776 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:22:18,776 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:22:31,458 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:22:31,459 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:22:31,461 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:24:17,156 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:24:17,156 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:24:17,156 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:24:17,302 INFO ✅ Cell Output Shape: torch.Size([64, 32, 28, 28])
2025-03-02 22:24:17,302 INFO 📢 Before cell 1: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 32, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:24:17,303 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:29:03,219 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:29:03,223 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:29:03,223 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:29:03,342 INFO ✅ Cell Output Shape: torch.Size([64, 32, 28, 28])
2025-03-02 22:29:03,342 INFO 📢 Before cell 1: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 32, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:29:03,346 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:38:07,211 INFO Stem output shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:38:07,214 INFO 📢 Before cell 0: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 16, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:38:07,214 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:38:07,216 INFO Input 0 shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:38:07,217 INFO Input 1 shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:38:07,344 INFO ✅ Cell Output Shape: torch.Size([64, 32, 28, 28])
2025-03-02 22:38:07,345 INFO 📢 Before cell 1: s0.shape=torch.Size([64, 16, 28, 28]), s1.shape=torch.Size([64, 32, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:38:07,347 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:38:07,347 INFO Input 0 shape: torch.Size([64, 16, 28, 28])
2025-03-02 22:38:07,347 INFO Input 1 shape: torch.Size([64, 32, 28, 28])
2025-03-02 22:38:07,347 WARNING ⚠️ Channel mismatch for input 0: expected 32, got 16
2025-03-02 22:38:07,456 INFO ✅ Cell Output Shape: torch.Size([64, 32, 28, 28])
2025-03-02 22:38:07,459 INFO 📢 Before cell 2: s0.shape=torch.Size([64, 32, 28, 28]), s1.shape=torch.Size([64, 32, 28, 28]), weights.shape=torch.Size([14])
2025-03-02 22:38:07,460 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:38:07,460 INFO Input 0 shape: torch.Size([64, 32, 28, 28])
2025-03-02 22:38:07,460 INFO Input 1 shape: torch.Size([64, 32, 28, 28])
2025-03-02 22:38:07,564 INFO ✅ Cell Output Shape: torch.Size([64, 32, 14, 14])
2025-03-02 22:38:07,564 INFO 📢 Before cell 3: s0.shape=torch.Size([64, 32, 28, 28]), s1.shape=torch.Size([64, 32, 14, 14]), weights.shape=torch.Size([14])
2025-03-02 22:38:07,565 INFO 🔄 Cell Processing: inputs = [<class 'torch.Tensor'>, <class 'torch.Tensor'>]
2025-03-02 22:38:07,565 INFO Input 0 shape: torch.Size([64, 32, 28, 28])
2025-03-02 22:38:07,565 INFO Input 1 shape: torch.Size([64, 32, 14, 14])
